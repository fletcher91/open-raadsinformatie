version: "2.2"

services:

    frontend:
        container_name: ${COMPOSE_PROJECT_NAME}_frontend
        build: ./ocd_frontend
        image: 'ori_frontend'
        volumes:
            - ./ocd_frontend:/opt/ori/ocd_frontend
            - ./ocd_frontend/es_mappings:/opt/ori/ocd_frontend/es_mappings:ro
        command: python wsgi.py
        restart: unless-stopped
        ports:
            - "127.0.0.1:5000:5000"
        environment:
            - WO_SENDGRID_KEY
        depends_on:
          elasticsearch:
            condition: service_healthy
        networks:
            - wo_bridge

    celery:
        container_name: ${COMPOSE_PROJECT_NAME}_celery
        build:
          context: ./ocd_frontend
          dockerfile: Docker-celery
        volumes:
            - ./ocd_frontend:/opt/ori/ocd_frontend
            - ./ocd_frontend/es_mappings:/opt/ori/ocd_frontend/es_mappings:ro
        restart: unless-stopped
        environment:
            - WO_SENDGRID_KEY
        depends_on:
          elasticsearch:
            condition: service_healthy
        networks:
            - wo_bridge

    redis:
        container_name: ${COMPOSE_PROJECT_NAME}_redis
        image: 'redis'
        volumes:
         - redisdata:/data
        restart: unless-stopped
        sysctls:
         - net.core.somaxconn=65535
        mem_limit: 2g
        ports:
            - "127.0.0.1:6379:6379"
        networks:
            - wo_bridge

    elasticsearch:
        container_name: ${COMPOSE_PROJECT_NAME}_elasticsearch
        image: "docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}"
        user: "root"
        command: /bin/su -c "/bin/bash ./bin/es-docker" elasticsearch
        environment:
            - network.host=0.0.0.0
            - http.host=0.0.0.0
            - node.master=true
            - xpack.security.enabled=false
            - reindex.remote.whitelist=dockerhost:*
        volumes:
            - esdata:/usr/share/elasticsearch/data
            - ${PWD}/ocd_frontend/set_dockerhost_alias.sh:/usr/share/elasticsearch/bin/set_dockerhost_alias.sh:ro
        restart: unless-stopped
        ports:
            - "127.0.0.1:9200:9200"
        healthcheck:
          test: wget -q -O - http://127.0.0.1:9200/_cat/health
          interval: 15s
          timeout: 10s
          retries: 3
        networks:
            - wo_bridge

volumes:
    esdata:
        driver: local
    redisdata:
        driver: local

networks:
    wo_bridge:
        driver: bridge
        driver_opts:
            com.docker.network.bridge.name: wo-bridge
